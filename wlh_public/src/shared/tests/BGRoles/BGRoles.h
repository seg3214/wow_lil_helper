//should be reworked as Object Cache
enum eCache_ObjecType {
	CACHE_OBJECT_ITEM = 0,
	CACHE_OBJECT_CONTAINER = 1,
	CACHE_OBJECT_NPC,
	CACHE_OBJECT_PLAYER,
	CACHE_OBJECT_GAMEOBJECT,
	CACHE_OBJECT_DYNAMICOBJECT,
	CACHE_OBJECT_CORPSE,
};
enum eCache_PlayerTags {
	CACHE_PLAYER_ATTACKABLE = 0x00000001,  //can be changed during BG(mind control)
	CACHE_PLAYER_ASSISTABLE = 0x00000002,  //can be changed during BG(mind control)
	CACHE_PLAYER_SPEC_TANK = 0x00000004,
	CACHE_PLAYER_SPEC_HEALER = 0x00000008,
	CACHE_PLAYER_SPEC_DPS = 0x00000010,
	CACHE_PLAYER_GEAR_PVE = 0x00000020,	      //can be changed during BG
	CACHE_PLAYER_GEAR_LOW = 0x00000040,	      //can be changed during BG
	CACHE_PLAYER_VEHICLE_DRIVER = 0x00000080,     //can be changed during BG
	CACHE_PLAYER_VEHICLE_PASSENGER = 0x00000100,  //can be changed during BG
	CACHE_PLAYER_DEAD = 0x00000200,		      //can be changed during BG
};
enum eCache_NPCTags {
	CACHE_NPC_ATTACKABLE = 0x00000001,
	CACHE_NPC_ASSISTABLE = 0x00000002,
	CACHE_NPC_SUMMONED = 0x00000004,
	CACHE_NPC_RARE = 0x00000008,
	CACHE_NPC_ELITE = 0x00000010,
	CACHE_NPC_BOSS = 0x00000020,
	CACHE_NPC_QUESTGIVER = 0x00000040,
	CACHE_NPC_DEAD = 0x00000080,
};

//uint32_t
enum eTalentSpecs {
	SPEC_WARRIOR_ARMS = 0x1,
	SPEC_WARRIOR_FURY = 0x2,
	SPEC_WARRIOR_PROTO = 0x4,
	SPEC_PALADIN_HOLY = 0x8,
	SPEC_PALADIN_PROTO = 0x10,
	SPEC_PALADIN_RETRI = 0x20,
	SPEC_HUNTER_BM = 0x40,
	SPEC_HUNTER_MARKSMAN = 0x80,
	SPEC_HUNTER_SURVIVAL = 0x100,
	SPEC_ROGUE_1 = 0x200,
	SPEC_ROGUE_2 = 0x400,
	SPEC_ROGUE_3 = 0x800,
	SPEC_PRIEST_DISC = 0x1000,
	SPEC_PRIEST_HOLY = 0x2000,
	SPEC_PRIEST_SHADOW = 0x4000,
	SPEC_DK_BLOOD = 0x8000,
	SPEC_DK_FROST = 0x10000,
	SPEC_DK_UNHOLY = 0x20000,
	SPEC_SHAMAN_ELEM = 0x40000,
	SPEC_SHAMAN_ENH = 0x80000,
	SPEC_SHAMAN_RESTO = 0x100000,
	SPEC_MAGE_ARCANE = 0x200000,
	SPEC_MAGE_FIRE = 0x400000,
	SPEC_MAGE_FROST = 0x800000,
	SPEC_WARLOCK_AFLI = 0x1000000,
	SPEC_WARLOCK_DEMON = 0x2000000,
	SPEC_WARLOCK_DESTR = 0x4000000,
	SPEC_DRUID_BALANCE = 0x8000000,
	SPEC_DRUID_FERAL = 0x10000000,
	SPEC_DRUID_RESTO = 0x20000000,
	SPEC_PROTO = SPEC_WARRIOR_PROTO + SPEC_PALADIN_PROTO + SPEC_DK_FROST,
	SPEC_HEALER = SPEC_PALADIN_HOLY + SPEC_PRIEST_DISC + SPEC_PRIEST_HOLY + SPEC_SHAMAN_RESTO + SPEC_DRUID_RESTO,
	SPEC_DPS = SPEC_WARRIOR_ARMS + SPEC_WARRIOR_FURY + SPEC_PALADIN_RETRI + SPEC_HUNTER_BM + SPEC_HUNTER_MARKSMAN + SPEC_HUNTER_SURVIVAL + SPEC_ROGUE_1 + SPEC_ROGUE_2 + SPEC_ROGUE_3 + SPEC_PRIEST_SHADOW + SPEC_DK_BLOOD + SPEC_DK_UNHOLY + SPEC_SHAMAN_ELEM + SPEC_SHAMAN_ENH + SPEC_MAGE_ARCANE + SPEC_MAGE_FIRE + SPEC_MAGE_FROST + SPEC_WARLOCK_AFLI + SPEC_WARLOCK_DEMON + SPEC_WARLOCK_DESTR + SPEC_DRUID_BALANCE + SPEC_DRUID_FERAL,
};
struct stBGPlayer {
	char name[13];
	D3DXVECTOR3 pos;
	uint64_t GUID;
	uint32_t objBase;
	// uint32_t* objHeader;
	enum eCache_ObjecType objType;
	union {
		enum eCache_PlayerTags tags_player;
		enum eCache_NPCTags tags_npc;
	};

	enum eTalentSpecs playerSpec;
	uint8_t HP_Percent;
	uint8_t visible;
	uint8_t canAttack;
	uint8_t canAssist;
	uint8_t unitClass;

	// enum UnitClass unitClass;
};
#define szarBGPlayers ph_size + pf_size
//the main interface to BGRoles thing
struct stBGRoles {
	//1..n
	uint32_t cacheMaxSlots;
	//current free slot in the cache. 0..n
	uint32_t cacheFreeSlot;
	struct stBGPlayer arBGPlayers[szarBGPlayers];
};

extern struct stBGRoles BGRoles;
extern int bg_id;
extern void BGRoles_Pulse(int switch1);
